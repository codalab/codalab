# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-04 18:17
from __future__ import unicode_literals

from django.db import migrations, models
import storages.backends.gcloud
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('web', '0002_auto_20180403_0201'),
    ]

    operations = [
        migrations.AlterField(
            model_name='competition',
            name='image',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'logos', verbose_name=b'Logo'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='secret_key',
            field=models.UUIDField(default=uuid.UUID('31b8d74c-756f-4c45-a08f-cf7b5a82b13c')),
        ),
        migrations.AlterField(
            model_name='competitiondefbundle',
            name='config_bundle',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'competition-bundles'),
        ),
        migrations.AlterField(
            model_name='competitiondump',
            name='data_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'competition_dump', verbose_name=b'Data file'),
        ),
        migrations.AlterField(
            model_name='competitionphase',
            name='ingestion_program',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'ingestion_program'),
        ),
        migrations.AlterField(
            model_name='competitionphase',
            name='input_data',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'phase_input_data_file', verbose_name=b'Input Data'),
        ),
        migrations.AlterField(
            model_name='competitionphase',
            name='public_data',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'public_data', verbose_name=b'Public Data'),
        ),
        migrations.AlterField(
            model_name='competitionphase',
            name='reference_data',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'phase_reference_data_file', verbose_name=b'Reference Data'),
        ),
        migrations.AlterField(
            model_name='competitionphase',
            name='scoring_program',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'phase_scoring_program_file', verbose_name=b'Scoring Program'),
        ),
        migrations.AlterField(
            model_name='competitionphase',
            name='starting_kit',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'starting_kit', verbose_name=b'Starting Kit'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='coopetition_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_coopetition'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='detailed_results_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_detailed_results'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b''),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='history_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_history'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='ingestion_program_stderr_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'predict_submission_stderr'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='ingestion_program_stdout_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'predict_submission_stdout'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='inputfile',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_inputfile'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='output_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_output'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='prediction_output_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_prediction_output'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='prediction_runfile',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_prediction_runfile'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='prediction_stderr_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'predict_submission_stderr'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='prediction_stdout_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'predict_submission_stdout'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='private_output_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_private_output'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='runfile',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_runfile'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='scores_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_scores'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='stderr_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_stderr'),
        ),
        migrations.AlterField(
            model_name='competitionsubmission',
            name='stdout_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'submission_stdout'),
        ),
        migrations.AlterField(
            model_name='organizerdataset',
            name='data_file',
            field=models.FileField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(bucket_name=None), upload_to=b'dataset_data_file', verbose_name=b'Data file'),
        ),
    ]
